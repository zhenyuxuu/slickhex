---
import Action from "@/components/Action.astro";
import type { HeaderData } from "@/config/landing.interface";

interface Props {
  data: HeaderData;
}

const { data } = Astro.props;
---

<header
  id="navbar"
  class="w-full transition duration-300 justify-center fixed h-20 z-50 flex"
>
  <nav aria-label="Main Navigation" class="flex flex-row items-center justify-between w-3/4">
    <div class="text-nowrap flex items-center gap-x-3">
      <Action as="a" href="#" class="flex items-center gap-x-3">
        <img 
          src={data.logo.src}
          alt={data.logo.alt}
          width={data.logo.width}
          height={data.logo.height}
          class="h-10 w-auto"
        />
        <span class="text-xl font-azonix text-gray">
          {data.logo.text}
        </span>
      </Action>
    </div>

    <div class="relative">
      <button
        id="menu-button"
        class="text-black-700 hover:text-primary focus:outline-none"
        aria-label="Toggle menu"
        aria-expanded="false"
      >
        <svg
          id="hamburger"
          class="h-8 w-8 block"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2.5"
            d="M4 6h16M4 12h16M4 18h16"
          />
        </svg>
        <svg
          id="down-arrow"
          class="h-8 w-8 hidden"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2.5"
            d="M19 9l-7 7-7-7"
          />
        </svg>
      </button>

      <ul
        id="menu-content"
        class="absolute right-0 top-full mt-2 w-40 bg-white shadow-xl transform origin-top scale-y-0 opacity-75 transition-all duration-300 ease-in-out rounded-xl overflow-hidden"
      >
        {
          data.links.map((item) => (
            <li>
              <Action 
                as="a" 
                href={item.href} 
                class="block w-full px-4 py-3 hover:bg-gray-50 text-gray-700 hover:text-primary font-poppins-semibold transition-colors"
              >
                {item.label}
              </Action>
            </li>
          ))
        }
      </ul>
    </div>
  </nav>
</header>

<script>
  const hamburgerIcon = document.getElementById('hamburger');
  const arrowIcon = document.getElementById('down-arrow');
  const menuButton = document.getElementById('menu-button');
  const menuContent = document.getElementById('menu-content');

  function openMenu() {
    menuContent?.classList.remove('scale-y-0', 'opacity-0');
    menuContent?.classList.add('scale-y-100', 'opacity-100');
    menuButton?.setAttribute('aria-expanded', 'true');

    hamburgerIcon?.classList.add('hidden');
    hamburgerIcon?.classList.remove('block');
    arrowIcon?.classList.add('block');
    arrowIcon?.classList.remove('hidden');
  }

  function closeMenu() {
    menuContent?.classList.add('scale-y-0', 'opacity-0');
    menuContent?.classList.remove('scale-y-100', 'opacity-100');
    menuButton?.setAttribute('aria-expanded', 'false');

    hamburgerIcon?.classList.add('block');
    hamburgerIcon?.classList.remove('hidden');
    arrowIcon?.classList.add('hidden');
    arrowIcon?.classList.remove('block');
  }

  document.addEventListener('click', (event) => {
    const target = event.target as Node;
    if (!menuButton?.contains(target) && !menuContent?.contains(target)) {
      closeMenu();
    }
  });

  menuButton?.addEventListener('click', (event) => {
    event.stopPropagation();
    if (menuButton.getAttribute('aria-expanded') === 'true') {
      closeMenu();
    } else {
      openMenu();
    }
  });

  // Existing scroll behavior
  window.addEventListener("scroll", function () {
    const navbar = document.getElementById("navbar");
    if (!navbar) return;

    if (window.scrollY >= 20) {
      navbar.classList.remove("border-b-transparent");
      navbar.classList.remove("bg-transparent");
      navbar.classList.add("border-b");
      navbar.classList.add("border-b-slate-300");
      navbar.classList.add("bg-white");
    } else {
      navbar.classList.remove("border-b");
      navbar.classList.remove("border-b-slate-300");
      navbar.classList.remove("bg-white");
      navbar.classList.add("border-b-transparent");
      navbar.classList.add("bg-transparent");
    }
  });
</script>
